# WARNING: Do not edit this file.
# It was generated by processing {{ yadm.source }}

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=( git zsh-vi-mode z extract sudo debian systemd command-not-found colored-man-pages fzf zsh-syntax-highlighting history-substring-search )

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
export SSH_KEY_PATH="~/.ssh/rsa_id"

# hide user@hostname in prompt (except in ssh)
DEFAULT_USER=$USER

# vteconfig for tilix
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
    source /etc/profile.d/vte.sh
fi

# disable <C-s>
stty -ixon

# zsh-autosuggestions
# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5'

# nnn file manager
n() {
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # To cd on quit by default, export NNN_TMPFILE
    NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn -de "$@"

    if [ -f "$NNN_TMPFILE" ]; then
        . "$NNN_TMPFILE"
        rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

# fzf
export FZF_DEFAULT_COMMAND='rg --files --hidden'
export FZF_DEFAULT_OPTS='--bind ctrl-u:preview-half-page-up,ctrl-d:preview-half-page-down'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--height 40% --layout=reverse --preview '(highlight -O ansi {} || cat {}) 2> /dev/null | head -500'"
export FZF_ALT_C_COMMAND='bfs -type d -nohidden | sed s#^\./##'

# git
alias origin='git fetch origin $(current_branch) && git reset --hard origin/$(current_branch)'
alias ap="arc patch --nobranch"
alias ac="arc diff HEAD~ --create"
alias au="arc diff HEAD~ --update"
alias al="arc land"
alias lg="lazygit"

# git-fuzzy
export GF_LOG_MENU_PARAMS='--pretty="%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --topo-order'
export GF_DIFF_COMMIT_PREVIEW_DEFAULTS="--patch-with-stat"
export GF_DIFF_COMMIT_RANGE_PREVIEW_DEFAULTS="--summary"
export GF_DIFF_FILE_PREVIEW_DEFAULTS="--indent-heuristic"

# vim
alias v=vim
alias gv=gvim

# zsh-vi-mode
export ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
function zvm_after_init() {
    zvm_bindkey viins "^[[H" beginning-of-line
    zvm_bindkey viins  "^[[F" end-of-line
    zvm_bindkey vicmd "^[[H" beginning-of-line
    zvm_bindkey vicmd "^[[F" end-of-line
    zvm_bindkey visual "^[[H" beginning-of-line
    zvm_bindkey visual "^[[F" end-of-line

    zvm_bindkey viins "^[[A" history-substring-search-up
    zvm_bindkey viins "^[[B" history-substring-search-down

    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
}

# bat, a replacement of cat
export BAT_THEME="Nord"

# rm with trash bin
alias del='rmtrash'

# cmake
export CMAKE_EXPORT_COMPILE_COMMANDS=ON

{% if yadm.class == "jc" %}
# ros
ros() {
    source /opt/ros/kinetic/setup.zsh
}

# gibraltar
gibraltar-fast() {
    source ~/temp/gde.sh no_extra_opt_jc
    export JC_CAR_ID=GZU_SPY_10036
}
gibraltar() {
    current_dir=$(pwd)
    cd ~/gibraltar
    JC_OVERRIDE_CURRENT_COUNTRY_CODE=CN JC_SETUP_SKIP_ROS_LOCATIONS_LOOKUP=1 JC_SETUP_SKIP_ROS_PYTHONPATH_LOOKUP=1 source setup.bash
    # source tf_cuda_setup.bash
    gibraltar-fast
    cd $current_dir
}
gibraltar-update-all-pip3-deps() {
    current_dir=$(pwd)
    cd ~/temp
    rm -rf all_pip3_deps.bak
    mv all_pip3_deps all_pip3_deps.bak
    cp -rL ~/gibraltar/bazel-gibraltar/external/all_pip3_deps .
    cd all_pip3_deps
    find . -mindepth 1 -maxdepth 1 -type d -printf '%f\n' | xargs -I {} rsync -avzhc {}/ .
    cd $current_dir
}
cg() {
    cd ~/gibraltar
}
cog() {
    cd /media/local_6t/gibraltar
}
update-gde() {
    current_dir=$(pwd)
    cd ~/temp
    mv gde.sh gde.sh.bak
    cp ~/gibraltar/tools/gde/client/gde.sh .
    git apply gde.sh.diff
    cd $current_dir
}
post-gde() {
    sudo add-apt-repository ppa:jonathonf/vim
    sudo apt update
    sudo apt install vim
    sudo dpkg -i ~/Downloads/ripgrep_12.1.1_amd64.deb
}
gibraltar-fast

# vim pack
alias pack="LD_LIBRARY_PATH=/opt/openssl-1.1.1c:${LD_LIBRARY_PATH} pack"

# xkk
alias xk='docker exec -it -u jovyan jupyter zsh'
{% endif %}
